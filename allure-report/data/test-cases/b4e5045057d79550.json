{
  "uid" : "b4e5045057d79550",
  "name" : "test_xiansuoliebiao[excel_data7]",
  "fullName" : "testcase.test_cluelist.TestClueList#test_xiansuoliebiao",
  "historyId" : "446006eefa6e88192253f544243b3b4b",
  "time" : {
    "start" : 1640263556512,
    "stop" : 1640263571245,
    "duration" : 14733
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"appMain\"]/div/div/div/div[2]/div[3]/div/span\"}\n  (Session info: chrome=96.0.4664.110)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00936903+2517251]\n\tOrdinal0 [0x008CF8E1+2095329]\n\tOrdinal0 [0x007D2848+1058888]\n\tOrdinal0 [0x007FD448+1233992]\n\tOrdinal0 [0x007FD63B+1234491]\n\tOrdinal0 [0x00827812+1406994]\n\tOrdinal0 [0x0081650A+1336586]\n\tOrdinal0 [0x00825BBF+1399743]\n\tOrdinal0 [0x0081639B+1336219]\n\tOrdinal0 [0x007F27A7+1189799]\n\tOrdinal0 [0x007F3609+1193481]\n\tGetHandleVerifier [0x00AC5904+1577972]\n\tGetHandleVerifier [0x00B70B97+2279047]\n\tGetHandleVerifier [0x009C6D09+534521]\n\tGetHandleVerifier [0x009C5DB9+530601]\n\tOrdinal0 [0x008D4FF9+2117625]\n\tOrdinal0 [0x008D98A8+2136232]\n\tOrdinal0 [0x008D99E2+2136546]\n\tOrdinal0 [0x008E3541+2176321]\n\tBaseThreadInitThunk [0x760BFA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77E17A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77E17A6E+238]",
  "statusTrace" : "self = <testcase.test_cluelist.TestClueList object at 0x0000026CD5A71EB0>\nexcel_data = {'action': None, 'assertparam': '[By.XPATH,\\'//*[@id=\"appMain\"]/div/div/div/div[2]/div[3]/div/span\\']', 'assertresult': 132, 'function': '下载', ...}\nstart = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"43b3793c84142b2c00ebe2967d851ce9\")>\n\n    def test_xiansuoliebiao(self,excel_data,start):\n        testdata=excel_data\n        self.driver=start\n        Log.info(testdata)\n        sleep(0.5)\n        #点击线索中心\n        ClueListPage(self.driver).cluecenter_page()\n        #等待线索列表\n        Page(self.driver).wait_until_presence(self.driver,ClueListPage(self.driver).cluelist)\n        #点击线索列表\n        ClueListPage(self.driver).cluelist_page()\n        sleep(1)\n    \n        # 如果id大于8，则需要点击详情后操作\n        if int(testdata[\"id\"])>8:\n            #点击最近30天后点击详情\n            ClueListPage(self.driver).last30_btn()\n            #等待查询元素\n            sleep(1)\n            #WebDriverWait(self.driver, 10, 0.5).until(EC.presence_of_element_located((By.XPATH,'//*[@id=\"appMain\"]/div/div/form/span/button[1]/span')))\n            ClueListPage(self.driver).seach_btn()\n            #等待详细元素存在点击详情\n            sleep(2)\n            ClueListPage(self.driver).detail_btn()\n            #等待新页面的元素加载\n            sleep(2)\n            # 点击excel中的param元素\n            Page(self.driver).find_element(*eval(testdata[\"param\"])).click()\n            sleep(2)\n            result = Page(self.driver).find_element(*eval(testdata[\"assertparam\"])).text\n            #如果失败，截图\n            if str(result) != str(testdata[\"assertresult\"]):\n                picname = str(testdata[\"function\"])+\"失败\"\n                screenshot(self.driver, picname)\n            assert str(testdata[\"assertresult\"])==str(result)\n    \n        else:\n            # 如果action，则发送send_keys\n            if testdata[\"action\"]:\n                if eval(testdata[\"action\"])[0] == \"send_keys()\":\n                    # 先点击元素后最近30天\n                    Page(self.driver).find_element(*eval(testdata[\"param\"])).send_keys(eval(testdata[\"action\"])[1])\n                    sleep(1)\n                    ClueListPage(self.driver).last30_btn()\n                    sleep(1)\n    \n            else:  #点击excel中的元素\n                Page(self.driver).find_element(*eval(testdata[\"param\"])).click()\n                sleep(1)\n            #查询后断言\n            ClueListPage(self.driver).seach_btn()\n            sleep(2)\n>           result = Page(self.driver).find_element(*eval(testdata[\"assertparam\"])).text\n\ntest_cluelist.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\page.py:52: in find_element\n    return self.driver.find_element(*loc)\nD:\\python3.9\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1244: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nD:\\python3.9\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000026CD5D74BE0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77E17A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77E17A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"appMain\"]/div/div/div/div[2]/div[3]/div/span\"}\nE         (Session info: chrome=96.0.4664.110)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00936903+2517251]\nE       \tOrdinal0 [0x008CF8E1+2095329]\nE       \tOrdinal0 [0x007D2848+1058888]\nE       \tOrdinal0 [0x007FD448+1233992]\nE       \tOrdinal0 [0x007FD63B+1234491]\nE       \tOrdinal0 [0x00827812+1406994]\nE       \tOrdinal0 [0x0081650A+1336586]\nE       \tOrdinal0 [0x00825BBF+1399743]\nE       \tOrdinal0 [0x0081639B+1336219]\nE       \tOrdinal0 [0x007F27A7+1189799]\nE       \tOrdinal0 [0x007F3609+1193481]\nE       \tGetHandleVerifier [0x00AC5904+1577972]\nE       \tGetHandleVerifier [0x00B70B97+2279047]\nE       \tGetHandleVerifier [0x009C6D09+534521]\nE       \tGetHandleVerifier [0x009C5DB9+530601]\nE       \tOrdinal0 [0x008D4FF9+2117625]\nE       \tOrdinal0 [0x008D98A8+2136232]\nE       \tOrdinal0 [0x008D99E2+2136546]\nE       \tOrdinal0 [0x008E3541+2176321]\nE       \tBaseThreadInitThunk [0x760BFA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77E17A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77E17A6E+238]\n\nD:\\python3.9\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "start",
    "time" : {
      "start" : 1640263552735,
      "stop" : 1640263556511,
      "duration" : 3776
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "tttaaa",
    "time" : {
      "start" : 1640263552735,
      "stop" : 1640263552735,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "excel_data",
    "time" : {
      "start" : 1640263556511,
      "stop" : 1640263556511,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"appMain\"]/div/div/div/div[2]/div[3]/div/span\"}\n  (Session info: chrome=96.0.4664.110)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00936903+2517251]\n\tOrdinal0 [0x008CF8E1+2095329]\n\tOrdinal0 [0x007D2848+1058888]\n\tOrdinal0 [0x007FD448+1233992]\n\tOrdinal0 [0x007FD63B+1234491]\n\tOrdinal0 [0x00827812+1406994]\n\tOrdinal0 [0x0081650A+1336586]\n\tOrdinal0 [0x00825BBF+1399743]\n\tOrdinal0 [0x0081639B+1336219]\n\tOrdinal0 [0x007F27A7+1189799]\n\tOrdinal0 [0x007F3609+1193481]\n\tGetHandleVerifier [0x00AC5904+1577972]\n\tGetHandleVerifier [0x00B70B97+2279047]\n\tGetHandleVerifier [0x009C6D09+534521]\n\tGetHandleVerifier [0x009C5DB9+530601]\n\tOrdinal0 [0x008D4FF9+2117625]\n\tOrdinal0 [0x008D98A8+2136232]\n\tOrdinal0 [0x008D99E2+2136546]\n\tOrdinal0 [0x008E3541+2176321]\n\tBaseThreadInitThunk [0x760BFA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77E17A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77E17A6E+238]",
    "statusTrace" : "self = <testcase.test_cluelist.TestClueList object at 0x0000026CD5A71EB0>\nexcel_data = {'action': None, 'assertparam': '[By.XPATH,\\'//*[@id=\"appMain\"]/div/div/div/div[2]/div[3]/div/span\\']', 'assertresult': 132, 'function': '下载', ...}\nstart = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"43b3793c84142b2c00ebe2967d851ce9\")>\n\n    def test_xiansuoliebiao(self,excel_data,start):\n        testdata=excel_data\n        self.driver=start\n        Log.info(testdata)\n        sleep(0.5)\n        #点击线索中心\n        ClueListPage(self.driver).cluecenter_page()\n        #等待线索列表\n        Page(self.driver).wait_until_presence(self.driver,ClueListPage(self.driver).cluelist)\n        #点击线索列表\n        ClueListPage(self.driver).cluelist_page()\n        sleep(1)\n    \n        # 如果id大于8，则需要点击详情后操作\n        if int(testdata[\"id\"])>8:\n            #点击最近30天后点击详情\n            ClueListPage(self.driver).last30_btn()\n            #等待查询元素\n            sleep(1)\n            #WebDriverWait(self.driver, 10, 0.5).until(EC.presence_of_element_located((By.XPATH,'//*[@id=\"appMain\"]/div/div/form/span/button[1]/span')))\n            ClueListPage(self.driver).seach_btn()\n            #等待详细元素存在点击详情\n            sleep(2)\n            ClueListPage(self.driver).detail_btn()\n            #等待新页面的元素加载\n            sleep(2)\n            # 点击excel中的param元素\n            Page(self.driver).find_element(*eval(testdata[\"param\"])).click()\n            sleep(2)\n            result = Page(self.driver).find_element(*eval(testdata[\"assertparam\"])).text\n            #如果失败，截图\n            if str(result) != str(testdata[\"assertresult\"]):\n                picname = str(testdata[\"function\"])+\"失败\"\n                screenshot(self.driver, picname)\n            assert str(testdata[\"assertresult\"])==str(result)\n    \n        else:\n            # 如果action，则发送send_keys\n            if testdata[\"action\"]:\n                if eval(testdata[\"action\"])[0] == \"send_keys()\":\n                    # 先点击元素后最近30天\n                    Page(self.driver).find_element(*eval(testdata[\"param\"])).send_keys(eval(testdata[\"action\"])[1])\n                    sleep(1)\n                    ClueListPage(self.driver).last30_btn()\n                    sleep(1)\n    \n            else:  #点击excel中的元素\n                Page(self.driver).find_element(*eval(testdata[\"param\"])).click()\n                sleep(1)\n            #查询后断言\n            ClueListPage(self.driver).seach_btn()\n            sleep(2)\n>           result = Page(self.driver).find_element(*eval(testdata[\"assertparam\"])).text\n\ntest_cluelist.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\page.py:52: in find_element\n    return self.driver.find_element(*loc)\nD:\\python3.9\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1244: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nD:\\python3.9\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000026CD5D74BE0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77E17A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77E17A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"appMain\"]/div/div/div/div[2]/div[3]/div/span\"}\nE         (Session info: chrome=96.0.4664.110)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00936903+2517251]\nE       \tOrdinal0 [0x008CF8E1+2095329]\nE       \tOrdinal0 [0x007D2848+1058888]\nE       \tOrdinal0 [0x007FD448+1233992]\nE       \tOrdinal0 [0x007FD63B+1234491]\nE       \tOrdinal0 [0x00827812+1406994]\nE       \tOrdinal0 [0x0081650A+1336586]\nE       \tOrdinal0 [0x00825BBF+1399743]\nE       \tOrdinal0 [0x0081639B+1336219]\nE       \tOrdinal0 [0x007F27A7+1189799]\nE       \tOrdinal0 [0x007F3609+1193481]\nE       \tGetHandleVerifier [0x00AC5904+1577972]\nE       \tGetHandleVerifier [0x00B70B97+2279047]\nE       \tGetHandleVerifier [0x009C6D09+534521]\nE       \tGetHandleVerifier [0x009C5DB9+530601]\nE       \tOrdinal0 [0x008D4FF9+2117625]\nE       \tOrdinal0 [0x008D98A8+2136232]\nE       \tOrdinal0 [0x008D99E2+2136546]\nE       \tOrdinal0 [0x008E3541+2176321]\nE       \tBaseThreadInitThunk [0x760BFA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77E17A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77E17A6E+238]\n\nD:\\python3.9\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException",
    "steps" : [ {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1640263571270,
        "stop" : 1640263571439,
        "duration" : 169
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "e988277d9a5a0e0e",
        "name" : "失败截图",
        "source" : "e988277d9a5a0e0e.png",
        "type" : "image/png",
        "size" : 80807
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "7bc42fdd0786018e",
      "name" : "log",
      "source" : "7bc42fdd0786018e.txt",
      "type" : "text/plain",
      "size" : 12117
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "start::0",
    "time" : {
      "start" : 1640263571447,
      "stop" : 1640263573591,
      "duration" : 2144
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_cluelist"
  }, {
    "name" : "subSuite",
    "value" : "TestClueList"
  }, {
    "name" : "host",
    "value" : "zhou"
  }, {
    "name" : "thread",
    "value" : "21564-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_cluelist"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "excel_data",
    "value" : "{'id': 8, 'module': '线索列表', 'function': '下载', 'param': '[By.XPATH,\\'//*[@id=\"appMain\"]/div/div/div/div[1]/div[1]/button/span\\']', 'action': None, 'assertparam': '[By.XPATH,\\'//*[@id=\"appMain\"]/div/div/div/div[2]/div[3]/div/span\\']', 'assertresult': 132}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "b4e5045057d79550.json",
  "parameterValues" : [ "{'id': 8, 'module': '线索列表', 'function': '下载', 'param': '[By.XPATH,\\'//*[@id=\"appMain\"]/div/div/div/div[1]/div[1]/button/span\\']', 'action': None, 'assertparam': '[By.XPATH,\\'//*[@id=\"appMain\"]/div/div/div/div[2]/div[3]/div/span\\']', 'assertresult': 132}" ]
}